" Required
set nocompatible
filetype off

" Show line numbers
set number relativenumber

" Set normal line numbers when in insert mode
autocmd InsertEnter * :set number norelativenumber
autocmd InsertLeave * :set number relativenumber

" Backspace like a normal person
set backspace=indent,eol,start

" Allow yank to go to system clipboard
set clipboard=unnamed

" Show tabs and newlines
set listchars=tab:▸\ ,eol:¬
set list

set eol

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

" Dracula Theme
Plugin 'dracula/vim'

" Ruby
Plugin 'vim-ruby/vim-ruby'
Plugin 't9md/vim-ruby-xmpfilter'
Plugin 'tpope/vim-rails'

" Coffeescript
Plugin 'kchmck/vim-coffee-script'

" Elixir
Plugin 'elixir-lang/vim-elixir'
Plugin 'slashmili/alchemist.vim'
Bundle 'slime-lang/vim-slime-syntax.git'

" Add the fzf.vim plugin to wrap fzf:
Plugin 'junegunn/fzf.vim'
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" Xmpfilter
autocmd FileType ruby nmap <buffer> <D-m> <Plug>(xmpfilter-mark)
autocmd FileType ruby xmap <buffer> <D-m> <Plug>(xmpfilter-mark)
autocmd FileType ruby imap <buffer> <D-m> <Plug>(xmpfilter-mark)

autocmd FileType ruby nmap <buffer> <D-r> <Plug>(xmpfilter-run)
autocmd FileType ruby xmap <buffer> <D-r> <Plug>(xmpfilter-run)
autocmd FileType ruby imap <buffer> <D-r> <Plug>(xmpfilter-run)

" Bad Whitespace
Plugin 'bitc/vim-bad-whitespace'

" Git Gutter
Plugin 'airblade/vim-gitgutter'

" Airline
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
set laststatus=2
let g:airline_powerline_fonts = 1

" Syntastic
Plugin 'scrooloose/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

map <c-p> :FZF<cr>

nnoremap <space>f :Rg!<space><c-r><c-w><cr>
xnoremap <space>f y:Rg!<space><c-r>0<cr>
"
" Nerd Tree
Plugin 'scrooloose/nerdtree.git'
autocmd StdinReadPre * let s:std_in=1
autocmd vimenter * NERDTree
autocmd VimEnter * if argc() | wincmd p | endif
let g:NERDTreeNodeDelimiter = "\u00a0"
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" End wise
Plugin 'tpope/vim-endwise'

" Silver Searcher
let g:ackprg = 'ag --vimgrep'

" Relative line numbers
Plugin 'jeffkreeftmeijer/vim-numbertoggle'

" Incsearch
Plugin 'haya14busa/incsearch.vim'

" Gutentags
Plugin 'ludovicchabant/vim-gutentags'

" All plugins defined
call vundle#end()

set statusline+=%{gutentags#statusline()}

" Set incsearch settings
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

nnoremap <leader>. :CtrlPTag<cr>

" Set color scheme
let g:dracula_colorterm=0
let g:dracula_italic = 0
colorscheme dracula
highlight Normal ctermbg=None

" Required
filetype plugin indent on
syntax enable

" Set up Slime to work with .slim files
autocmd BufNewFile,BufRead *.slim set filetype=slime

" Ruby, JS, Elixir file settings
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set tabstop=2
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set softtabstop=2
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set shiftwidth=2
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set expandtab
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set smarttab
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         set autoindent
au BufRead,BufNewFile *.rb                                                      match Error /\%81v.\+/

au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         match BadWhitespace /^\t\+/
au BufRead,BufNewFile *.js,*.rb,*.exs,*.ex,*.eex,*.coffee,*.slim,*.rake         match BadWhitespace /\s\+$/
